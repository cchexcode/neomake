version: "0.6"

env:
  capture: "^(PWD)$"
  vars:
    ENV_GLOBAL: "val_global"

nodes:
  count:
    matrix:
      parallel: false
      dimensions:
        - - env:
              vars:
                X: "0"
          - env:
              vars:
                X: "1"
        - - env:
              vars:
                Y: "0"
          - env:
              vars:
                Y: "1"
        - - env:
              vars:
                Z: "0"
          - env:
              vars:
                Z: "1"
    tasks:
      - shell: "python3 -c"
        script: |
          import time
          import os
          import random

          cnt = 0
          while True:
            print(f'{os.environ.get("X")}{os.environ.get("Y")}{os.environ.get("Z")}: {cnt}', flush=True)
            cnt+=1
            time.sleep(random.random())

  print:
    matrix:
      parallel: true
      dimensions:
        - - env:
              vars:
                X: "0"
          - env:
              vars:
                X: "1"
        - - env:
              vars:
                Y: "0"
          - env:
              vars:
                Y: "1"
    tasks:
      - script: |
          printf $X-$Y

  alpha: # minimal example
    tasks:
      - script: |
          set -e
          printf "alpha"

  bravo: # with predecessor
    pre:
      - name: alpha
    tasks:
      - script: |
          set -e
          printf "bravo"

  charlie: # environment variables
    env:
      vars:
        ENV_NODE: val_node
    matrix:
      parallel: true
      dimensions:
        - - env:
              vars:
                ENV_MATRIX: "val_matrix"
    tasks:
      - env:
          vars:
            ENV_TASK: val_task
        script: |
          set -e
          printf "$ENV_GLOBAL\n"
          printf "$ENV_NODE\n"
          printf "$ENV_MATRIX\n"
          printf "$ENV_TASK\n"

  delta: # matrix
    matrix:
      parallel: true
      dimensions:
        - - env:
              vars:
                X: "0"
          - env:
              vars:
                X: "1"
        - - env:
              vars:
                Y: "0"
          - env:
              vars:
                Y: "1"
    tasks:
      - script: |
          set -e
          printf "$X$Y\n"

  echo: # workdir
    workdir: "./res"
    tasks:
      - script: |
          set -e
          ls -al1 .
      - workdir: ./test
        script: |
          set -e
          ls -al1 .

  foxtrot: # shell
    shell: "/bin/bash -c"
    tasks:
      - script: |
          set -e
          printf "$0"
      - shell: "/bin/sh -c"
        script: |
          set -e
          printf "$0"

  golf:
    tasks:
      - script: |
          set -e
          exit 1

  hotel:
    tasks:
      - script: |
          set -e
          printf "event: {{ EVENT }}\n"
          printf "event kind: {{ EVENT_KIND }}\n"
          printf "event path: {{ EVENT_PATH }}\n"
          sleep 4;

watch:
  all:
    filter: '^(modified\/data\/content)\|.+(\.yaml)$'
    queue: true
    exec:
      node:
        ref: hotel
